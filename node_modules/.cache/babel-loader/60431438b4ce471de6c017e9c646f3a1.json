{"ast":null,"code":"var _jsxFileName = \"/Users/michal/Desktop/new-app/new-app/src/components/modal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport \"./App.css\";\nimport data from \"./mock-data.json\";\nimport ReadOnlyRow from \"./components/ReadOnlyRow\";\nimport EditableRow from \"./components/EditableRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Modal = props => {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [contacts, setContacts] = useState(data);\n  const [addFormData, setAddFormData] = useState({\n    title: \"\",\n    textContent: \"\",\n    currentDate: \"\"\n  });\n  const [editFormData, setEditFormData] = useState({\n    title: \"\",\n    textContent: \"\",\n    currentDate: \"\"\n  });\n  const [editContactId, setEditContactId] = useState(null);\n\n  const handleAddFormChange = event => {\n    event.preventDefault();\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n    const newFormData = { ...addFormData\n    };\n    newFormData[fieldName] = fieldValue;\n    setAddFormData(newFormData);\n  };\n\n  const handleEditFormChange = event => {\n    event.preventDefault();\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n    const newFormData = { ...editFormData\n    };\n    newFormData[fieldName] = fieldValue;\n    setEditFormData(newFormData);\n  };\n\n  const handleAddFormSubmit = event => {\n    event.preventDefault();\n    const newContact = {\n      id: nanoid(),\n      title: addFormData.title,\n      textContent: addFormData.textContent,\n      currentDate: addFormData.currentDate\n    };\n    const newContacts = [...contacts, newContact];\n    setContacts(newContacts);\n    const firstInput = document.getElementsByClassName('firstInput');\n    console.log(firstInput);\n    firstInput.value = '';\n  };\n\n  const handleEditFormSubmit = event => {\n    event.preventDefault();\n    const editedContact = {\n      id: editContactId,\n      title: editFormData.title,\n      textContent: editFormData.textContent,\n      currentDate: editFormData.currentDate\n    };\n    const newContacts = [...contacts];\n    const index = contacts.findIndex(contact => contact.id === editContactId);\n    newContacts[index] = editedContact;\n    setContacts(newContacts);\n    setEditContactId(null);\n  };\n\n  const handleEditClick = (event, contact) => {\n    event.preventDefault();\n    setEditContactId(contact.id);\n    const formValues = {\n      title: contact.title,\n      textContent: contact.textContent,\n      currentDate: contact.currentDate\n    };\n    setEditFormData(formValues);\n  };\n\n  const handleCancelClick = () => {\n    setEditContactId(null);\n  };\n\n  const handleDeleteClick = contactId => {\n    const newContacts = [...contacts];\n    const index = contacts.findIndex(contact => contact.id === contactId);\n    newContacts.splice(index, 1);\n    setContacts(newContacts);\n  };\n\n  if (!props.show) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"modal-title\",\n            children: \"Modal-title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"firstInput\",\n            onSubmit: handleAddFormSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"title\",\n              required: \"required\",\n              minlength: \"3\",\n              maxLength: \"250\",\n              placeholder: \"Tytu\\u0142\",\n              onChange: handleAddFormChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"textContent\",\n              required: \"required\",\n              placeholder: \"Wiadomo\\u015B\\u0107\",\n              onChange: handleAddFormChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: props.onClose,\n            className: \"button\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            children: \"Dodaj\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Modal, \"wIAIaOtcSdLhvvqhAX9lT4k33e4=\");\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/Users/michal/Desktop/new-app/new-app/src/components/modal.js"],"names":["React","useState","Fragment","nanoid","data","ReadOnlyRow","EditableRow","Modal","props","show","setShow","contacts","setContacts","addFormData","setAddFormData","title","textContent","currentDate","editFormData","setEditFormData","editContactId","setEditContactId","handleAddFormChange","event","preventDefault","fieldName","target","getAttribute","fieldValue","value","newFormData","handleEditFormChange","handleAddFormSubmit","newContact","id","newContacts","firstInput","document","getElementsByClassName","console","log","handleEditFormSubmit","editedContact","index","findIndex","contact","handleEditClick","formValues","handleCancelClick","handleDeleteClick","contactId","splice","onClose"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport \"./App.css\";\nimport data from \"./mock-data.json\";\nimport ReadOnlyRow from \"./components/ReadOnlyRow\";\nimport EditableRow from \"./components/EditableRow\";\n\nconst Modal = props => {\n    const [show, setShow] = useState(false);\n  const [contacts, setContacts] = useState(data);\n  const [addFormData, setAddFormData] = useState({\n    title: \"\",\n    textContent: \"\",\n    currentDate: \"\",\n    \n  });\n  \n\n  const [editFormData, setEditFormData] = useState({\n    title: \"\",\n    textContent: \"\",\n    currentDate: \"\",\n    \n  });\n\n  \n\n  const [editContactId, setEditContactId] = useState(null);\n\n  const handleAddFormChange = (event) => {\n    event.preventDefault();\n\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n\n    const newFormData = { ...addFormData };\n    newFormData[fieldName] = fieldValue;\n\n    setAddFormData(newFormData);\n\n    \n\n    \n  };\n\n  const handleEditFormChange = (event) => {\n    event.preventDefault();\n\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n\n    const newFormData = { ...editFormData };\n    newFormData[fieldName] = fieldValue;\n\n    setEditFormData(newFormData);\n  };\n\n  const handleAddFormSubmit = (event) => {\n    event.preventDefault();\n\n    const newContact = {\n      id: nanoid(),\n      title: addFormData.title,\n      textContent: addFormData.textContent,\n      currentDate: addFormData.currentDate,\n      \n    };\n\n    const newContacts = [...contacts, newContact];\n    setContacts(newContacts);\n    \n    const firstInput = document.getElementsByClassName('firstInput');\n    console.log(firstInput)\n    firstInput.value = '';\n  };\n\n  const handleEditFormSubmit = (event) => {\n    event.preventDefault();\n\n    const editedContact = {\n      id: editContactId,\n      title: editFormData.title,\n      textContent: editFormData.textContent,\n      currentDate: editFormData.currentDate,\n      \n    };\n\n    const newContacts = [...contacts];\n\n    const index = contacts.findIndex((contact) => contact.id === editContactId);\n\n    newContacts[index] = editedContact;\n\n    setContacts(newContacts);\n    setEditContactId(null);\n\n    \n  };\n\n  const handleEditClick = (event, contact) => {\n    event.preventDefault();\n    setEditContactId(contact.id);\n\n    const formValues = {\n      title: contact.title,\n      textContent: contact.textContent,\n      currentDate: contact.currentDate,\n      \n    };\n\n    setEditFormData(formValues);\n  };\n\n  const handleCancelClick = () => {\n    setEditContactId(null);\n  };\n\n  const handleDeleteClick = (contactId) => {\n    const newContacts = [...contacts];\n\n    const index = contacts.findIndex((contact) => contact.id === contactId);\n\n    newContacts.splice(index, 1);\n\n    setContacts(newContacts);\n  };\n\n    if (!props.show) {\n        return null\n    }\n    return (\n        <div className=\"modal\">\n            <div className=\"modal\">\n            <div className=\"modal-content\">\n            <div className=\"modal-header\">\n                <h4 className=\"modal-title\">Modal-title</h4>\n            </div>\n            <div className=\"modal-body\">\n            <form  className=\"firstInput\" onSubmit={handleAddFormSubmit}>\n        <input \n          type=\"text\"\n          name=\"title\"\n          required=\"required\"\n          minlength = \"3\"\n          maxLength= \"250\"\n          placeholder=\"Tytuł\"\n          onChange={handleAddFormChange}\n        />\n        <input\n          type=\"text\"\n          name=\"textContent\"\n          required=\"required\"\n          placeholder=\"Wiadomość\"\n          onChange={handleAddFormChange}\n        />\n        \n        \n        \n        \n      </form>\n            </div>\n            <div className=\"modal-footer\">\n                <button onClick={props.onClose} className=\"button\">Close</button>\n                <button className=\"button\">Dodaj</button>\n            </div>\n            </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Modal"]},"metadata":{},"sourceType":"module"}