{"ast":null,"code":"var _jsxFileName = \"/Users/michal/Desktop/new-app/new-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport \"./App.css\";\nimport data from \"./mock-data.json\";\nimport ReadOnlyRow from \"./components/ReadOnlyRow\";\nimport EditableRow from \"./components/EditableRow\";\nimport Modal from \"./components/modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [contacts, setContacts] = useState(data);\n  const [addFormData, setAddFormData] = useState({\n    title: \"\",\n    textContent: \"\",\n    currentDate: \"\"\n  });\n  const [editFormData, setEditFormData] = useState({\n    title: \"\",\n    textContent: \"\",\n    currentDate: \"\"\n  });\n  const [editContactId, setEditContactId] = useState(null);\n\n  const handleAddFormChange = event => {\n    event.preventDefault();\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n    const newFormData = { ...addFormData\n    };\n    newFormData[fieldName] = fieldValue;\n    setAddFormData(newFormData);\n  };\n\n  const handleEditFormChange = event => {\n    event.preventDefault();\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n    const newFormData = { ...editFormData\n    };\n    newFormData[fieldName] = fieldValue;\n    setEditFormData(newFormData);\n  };\n\n  const handleEditFormSubmit = event => {\n    event.preventDefault();\n    const editedContact = {\n      id: editContactId,\n      title: editFormData.title,\n      textContent: editFormData.textContent,\n      currentDate: editFormData.currentDate\n    };\n    const newContacts = [...contacts];\n    const index = contacts.findIndex(contact => contact.id === editContactId);\n    newContacts[index] = editedContact;\n    setContacts(newContacts);\n    setEditContactId(null);\n  };\n\n  const handleEditClick = (event, contact) => {\n    event.preventDefault();\n    setEditContactId(contact.id);\n    const formValues = {\n      title: contact.title,\n      textContent: contact.textContent,\n      currentDate: contact.currentDate\n    };\n    setEditFormData(formValues);\n  };\n\n  const handleCancelClick = () => {\n    setEditContactId(null);\n  };\n\n  const handleDeleteClick = contactId => {\n    const newContacts = [...contacts];\n    const index = contacts.findIndex(contact => contact.id === contactId);\n    newContacts.splice(index, 1);\n    setContacts(newContacts);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"appButton\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShow(true),\n        children: \"Show Modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        onClose: () => setShow(false),\n        show: show\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleEditFormSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Tytu\\u0142\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Testowa wiadomo\\u015B\\u0107\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Data dodania\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: contacts.map(contact => /*#__PURE__*/_jsxDEV(Fragment, {\n            children: editContactId === contact.id ? /*#__PURE__*/_jsxDEV(EditableRow, {\n              editFormData: editFormData,\n              handleEditFormChange: handleEditFormChange,\n              handleCancelClick: handleCancelClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(ReadOnlyRow, {\n              contact: contact,\n              handleEditClick: handleEditClick,\n              handleDeleteClick: handleDeleteClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dodaj wiadomo\\u015B\\u0107\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"wIAIaOtcSdLhvvqhAX9lT4k33e4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/michal/Desktop/new-app/new-app/src/App.js"],"names":["React","useState","Fragment","nanoid","data","ReadOnlyRow","EditableRow","Modal","App","show","setShow","contacts","setContacts","addFormData","setAddFormData","title","textContent","currentDate","editFormData","setEditFormData","editContactId","setEditContactId","handleAddFormChange","event","preventDefault","fieldName","target","getAttribute","fieldValue","value","newFormData","handleEditFormChange","handleEditFormSubmit","editedContact","id","newContacts","index","findIndex","contact","handleEditClick","formValues","handleCancelClick","handleDeleteClick","contactId","splice","map"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport \"./App.css\";\nimport data from \"./mock-data.json\";\nimport ReadOnlyRow from \"./components/ReadOnlyRow\";\nimport EditableRow from \"./components/EditableRow\";\nimport Modal from \"./components/modal\";\n\n\n\n\nconst App = () => {\n  \n  const [show, setShow] = useState(false);\n  const [contacts, setContacts] = useState(data);\n  const [addFormData, setAddFormData] = useState({\n    title: \"\",\n    textContent: \"\",\n    currentDate: \"\",\n    \n  });\n  \n\n  const [editFormData, setEditFormData] = useState({\n    title: \"\",\n    textContent: \"\",\n    currentDate: \"\",\n    \n  });\n\n  \n\n  const [editContactId, setEditContactId] = useState(null);\n\n  const handleAddFormChange = (event) => {\n    event.preventDefault();\n\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n\n    const newFormData = { ...addFormData };\n    newFormData[fieldName] = fieldValue;\n\n    setAddFormData(newFormData);\n\n    \n\n    \n  };\n\n  const handleEditFormChange = (event) => {\n    event.preventDefault();\n\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n\n    const newFormData = { ...editFormData };\n    newFormData[fieldName] = fieldValue;\n\n    setEditFormData(newFormData);\n  };\n\n  \n\n  const handleEditFormSubmit = (event) => {\n    event.preventDefault();\n\n    const editedContact = {\n      id: editContactId,\n      title: editFormData.title,\n      textContent: editFormData.textContent,\n      currentDate: editFormData.currentDate,\n      \n    };\n\n    const newContacts = [...contacts];\n\n    const index = contacts.findIndex((contact) => contact.id === editContactId);\n\n    newContacts[index] = editedContact;\n\n    setContacts(newContacts);\n    setEditContactId(null);\n\n    \n  };\n\n  const handleEditClick = (event, contact) => {\n    event.preventDefault();\n    setEditContactId(contact.id);\n\n    const formValues = {\n      title: contact.title,\n      textContent: contact.textContent,\n      currentDate: contact.currentDate,\n      \n    };\n\n    setEditFormData(formValues);\n  };\n\n  const handleCancelClick = () => {\n    setEditContactId(null);\n  };\n\n  const handleDeleteClick = (contactId) => {\n    const newContacts = [...contacts];\n\n    const index = contacts.findIndex((contact) => contact.id === contactId);\n\n    newContacts.splice(index, 1);\n\n    setContacts(newContacts);\n  };\n\n  \n\n  return (\n    <div className=\"app-container\">\n      <div className=\"appButton\">\n        <button onClick={() => setShow(true)}>Show Modal</button>\n        <Modal onClose={() => setShow(false)}show={show}/>\n      </div>\n      <form  onSubmit={handleEditFormSubmit}>\n        <table>\n          <thead>\n            <tr>\n              <th>Tytuł</th>\n              <th>Testowa wiadomość</th>\n              <th>Data dodania</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {contacts.map((contact) => (\n              <Fragment>\n                {editContactId === contact.id ? (\n                  <EditableRow\n                    editFormData={editFormData}\n                    handleEditFormChange={handleEditFormChange}\n                    handleCancelClick={handleCancelClick}\n                  />\n                ) : (\n                  <ReadOnlyRow\n                    contact={contact}\n                    handleEditClick={handleEditClick}\n                    handleDeleteClick={handleDeleteClick}\n                  />\n                )}\n              </Fragment>\n            ))}\n          </tbody>\n        </table>\n      </form>\n\n      <h2>Dodaj wiadomość</h2>\n      \n    </div>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}