{"ast":null,"code":"var _jsxFileName = \"/Users/michal/Desktop/new-app/new-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport \"./App.css\";\nimport data from \"./mock-data.json\";\nimport ReadOnlyRow from \"./components/ReadOnlyRow\";\nimport EditableRow from \"./components/EditableRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [contacts, setContacts] = useState(data);\n  const [addFormData, setAddFormData] = useState({\n    title: \"\",\n    textContent: \"\",\n    currentDate: \"\"\n  });\n  const [editFormData, setEditFormData] = useState({\n    title: \"\",\n    textContent: \"\",\n    currentDate: \"\"\n  });\n  const date = new Date();\n  const currentDate = date.toISOString().slice(0, 10);\n  document.getElementById('currentDate').value = currentDate;\n  const [editContactId, setEditContactId] = useState(null);\n\n  const handleAddFormChange = event => {\n    event.preventDefault();\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n    const newFormData = { ...addFormData\n    };\n    newFormData[fieldName] = fieldValue;\n    setAddFormData(newFormData);\n  };\n\n  const handleEditFormChange = event => {\n    event.preventDefault();\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n    const newFormData = { ...editFormData\n    };\n    newFormData[fieldName] = fieldValue;\n    setEditFormData(newFormData);\n  };\n\n  const handleAddFormSubmit = event => {\n    event.preventDefault();\n    const newContact = {\n      id: nanoid(),\n      title: addFormData.title,\n      textContent: addFormData.textContent,\n      currentDate: addFormData.currentDate\n    };\n    const newContacts = [...contacts, newContact];\n    setContacts(newContacts);\n  };\n\n  const handleEditFormSubmit = event => {\n    event.preventDefault();\n    const editedContact = {\n      id: editContactId,\n      title: editFormData.title,\n      textContent: editFormData.textContent,\n      currentDate: editFormData.currentDate\n    };\n    const newContacts = [...contacts];\n    const index = contacts.findIndex(contact => contact.id === editContactId);\n    newContacts[index] = editedContact;\n    setContacts(newContacts);\n    setEditContactId(null);\n  };\n\n  const handleEditClick = (event, contact) => {\n    event.preventDefault();\n    setEditContactId(contact.id);\n    const formValues = {\n      title: contact.title,\n      textContent: contact.textContent,\n      currentDate: contact.currentDate\n    };\n    setEditFormData(formValues);\n  };\n\n  const handleCancelClick = () => {\n    setEditContactId(null);\n  };\n\n  const handleDeleteClick = contactId => {\n    const newContacts = [...contacts];\n    const index = contacts.findIndex(contact => contact.id === contactId);\n    newContacts.splice(index, 1);\n    setContacts(newContacts);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleEditFormSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Tytu\\u0142\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Testowa wiadomo\\u015B\\u0107\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Data dodania\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: contacts.map(contact => /*#__PURE__*/_jsxDEV(Fragment, {\n            children: editContactId === contact.id ? /*#__PURE__*/_jsxDEV(EditableRow, {\n              editFormData: editFormData,\n              handleEditFormChange: handleEditFormChange,\n              handleCancelClick: handleCancelClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(ReadOnlyRow, {\n              contact: contact,\n              handleEditClick: handleEditClick,\n              handleDeleteClick: handleDeleteClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        required: \"required\",\n        minlength: \"3\",\n        maxLength: \"250\",\n        placeholder: \"Enter a name...\",\n        onChange: handleAddFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"textContent\",\n        required: \"required\",\n        placeholder: \"Enter an addres...\",\n        onChange: handleAddFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"currentDate\",\n        required: \"required\",\n        placeholder: \"Enter a phone number...\",\n        onChange: handleAddFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"YvsgjcG1AnQ/k/kkxbTbfHegXEs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/michal/Desktop/new-app/new-app/src/App.js"],"names":["React","useState","Fragment","nanoid","data","ReadOnlyRow","EditableRow","App","contacts","setContacts","addFormData","setAddFormData","title","textContent","currentDate","editFormData","setEditFormData","date","Date","toISOString","slice","document","getElementById","value","editContactId","setEditContactId","handleAddFormChange","event","preventDefault","fieldName","target","getAttribute","fieldValue","newFormData","handleEditFormChange","handleAddFormSubmit","newContact","id","newContacts","handleEditFormSubmit","editedContact","index","findIndex","contact","handleEditClick","formValues","handleCancelClick","handleDeleteClick","contactId","splice","map"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport \"./App.css\";\nimport data from \"./mock-data.json\";\nimport ReadOnlyRow from \"./components/ReadOnlyRow\";\nimport EditableRow from \"./components/EditableRow\";\n\nconst App = () => {\n  const [contacts, setContacts] = useState(data);\n  const [addFormData, setAddFormData] = useState({\n    title: \"\",\n    textContent: \"\",\n    currentDate: \"\",\n    \n  });\n\n  const [editFormData, setEditFormData] = useState({\n    title: \"\",\n    textContent: \"\",\n    currentDate: \"\",\n    \n  });\n\n  const date = new Date();\nconst currentDate = date.toISOString().slice(0,10);\n\n\ndocument.getElementById('currentDate').value = currentDate;\n\n  const [editContactId, setEditContactId] = useState(null);\n\n  const handleAddFormChange = (event) => {\n    event.preventDefault();\n\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n\n    const newFormData = { ...addFormData };\n    newFormData[fieldName] = fieldValue;\n\n    setAddFormData(newFormData);\n  };\n\n  const handleEditFormChange = (event) => {\n    event.preventDefault();\n\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n\n    const newFormData = { ...editFormData };\n    newFormData[fieldName] = fieldValue;\n\n    setEditFormData(newFormData);\n  };\n\n  const handleAddFormSubmit = (event) => {\n    event.preventDefault();\n\n    const newContact = {\n      id: nanoid(),\n      title: addFormData.title,\n      textContent: addFormData.textContent,\n      currentDate: addFormData.currentDate,\n      \n    };\n\n    const newContacts = [...contacts, newContact];\n    setContacts(newContacts);\n  };\n\n  const handleEditFormSubmit = (event) => {\n    event.preventDefault();\n\n    const editedContact = {\n      id: editContactId,\n      title: editFormData.title,\n      textContent: editFormData.textContent,\n      currentDate: editFormData.currentDate,\n      \n    };\n\n    const newContacts = [...contacts];\n\n    const index = contacts.findIndex((contact) => contact.id === editContactId);\n\n    newContacts[index] = editedContact;\n\n    setContacts(newContacts);\n    setEditContactId(null);\n  };\n\n  const handleEditClick = (event, contact) => {\n    event.preventDefault();\n    setEditContactId(contact.id);\n\n    const formValues = {\n      title: contact.title,\n      textContent: contact.textContent,\n      currentDate: contact.currentDate,\n      \n    };\n\n    setEditFormData(formValues);\n  };\n\n  const handleCancelClick = () => {\n    setEditContactId(null);\n  };\n\n  const handleDeleteClick = (contactId) => {\n    const newContacts = [...contacts];\n\n    const index = contacts.findIndex((contact) => contact.id === contactId);\n\n    newContacts.splice(index, 1);\n\n    setContacts(newContacts);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <form onSubmit={handleEditFormSubmit}>\n        <table>\n          <thead>\n            <tr>\n              <th>Tytuł</th>\n              <th>Testowa wiadomość</th>\n              <th>Data dodania</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {contacts.map((contact) => (\n              <Fragment>\n                {editContactId === contact.id ? (\n                  <EditableRow\n                    editFormData={editFormData}\n                    handleEditFormChange={handleEditFormChange}\n                    handleCancelClick={handleCancelClick}\n                  />\n                ) : (\n                  <ReadOnlyRow\n                    contact={contact}\n                    handleEditClick={handleEditClick}\n                    handleDeleteClick={handleDeleteClick}\n                  />\n                )}\n              </Fragment>\n            ))}\n          </tbody>\n        </table>\n      </form>\n\n      <h2>Add a Contact</h2>\n      <form onSubmit={handleAddFormSubmit}>\n        <input\n          type=\"text\"\n          name=\"title\"\n          required=\"required\"\n          minlength = \"3\"\n          maxLength= \"250\"\n          placeholder=\"Enter a name...\"\n          onChange={handleAddFormChange}\n        />\n        <input\n          type=\"text\"\n          name=\"textContent\"\n          required=\"required\"\n          placeholder=\"Enter an addres...\"\n          onChange={handleAddFormChange}\n        />\n        <input\n          type=\"date\"\n          name=\"currentDate\"\n          required=\"required\"\n          placeholder=\"Enter a phone number...\"\n          onChange={handleAddFormChange}\n        />\n        \n        <button type=\"submit\">Add</button>\n      </form>\n    </div>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}